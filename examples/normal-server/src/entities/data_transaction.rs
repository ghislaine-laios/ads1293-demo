//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "data_transaction")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub start_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::data::Entity")]
    Data,
}

impl Related<super::data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Data.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
